/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_EXPORT_PB_H_INCLUDED
#define PB_EXPORT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _TemporaryExposureKey_ReportType { 
    TemporaryExposureKey_ReportType_UNKNOWN = 0, 
    TemporaryExposureKey_ReportType_CONFIRMED_TEST = 1, 
    TemporaryExposureKey_ReportType_CONFIRMED_CLINICAL_DIAGNOSIS = 2, 
    TemporaryExposureKey_ReportType_SELF_REPORT = 3, 
    TemporaryExposureKey_ReportType_RECURSIVE = 4, 
    TemporaryExposureKey_ReportType_REVOKED = 5 
} TemporaryExposureKey_ReportType;

/* Struct definitions */
typedef struct _SignatureInfo { 
    /* Key version for rollovers
 Must be in character class [a-zA-Z0-9_]. E.g., 'v1' */
    pb_callback_t verification_key_version; 
    /* Alias with which to identify public key to be used for verification
 Must be in character class [a-zA-Z0-9_]
 For cross-compatibility with Apple, use MCC
 (https://en.wikipedia.org/wiki/Mobile_country_code). */
    pb_callback_t verification_key_id; 
    /* ASN.1 OID for Algorithm Identifier. Supported algorithms are
 either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4 */
    pb_callback_t signature_algorithm; 
} SignatureInfo;

typedef struct _TEKSignatureList { 
    /* When there are multiple signatures, they must be sorted in time order
 by first effective date for the signing key in descending order.
 The most recent effective signing key must appear first.
 There is a limit of 10 signature infos per export file (mobile OS may
 not check anything after that). */
    pb_callback_t signatures; 
} TEKSignatureList;

typedef struct _TEKSignature { 
    /* Info about the signing key, version, algorithm, etc. */
    bool has_signature_info;
    SignatureInfo signature_info; 
    /* E.g., Batch 2 of 10
 Must match fields from TemporaryExposureKeyExport, see
 documentation on that message. */
    bool has_batch_num;
    int32_t batch_num; 
    bool has_batch_size;
    int32_t batch_size; 
    /* Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields) */
    pb_callback_t signature; 
} TEKSignature;

typedef struct _TemporaryExposureKey { 
    /* Key of infected user */
    pb_callback_t key_data; 
    /* Varying risks associated with exposure depending on type of verification
 Ignored by the v1.5 client API when report_type is set. */
    bool has_transmission_risk_level;
    int32_t transmission_risk_level; 
    /* The interval number since epoch for which a key starts */
    bool has_rolling_start_interval_number;
    int32_t rolling_start_interval_number; 
    /* Increments of 10 minutes describing how long a key is valid */
    bool has_rolling_period;
    int32_t rolling_period; /* defaults to 24 hours */
    /* Type of diagnosis associated with a key. */
    bool has_report_type;
    TemporaryExposureKey_ReportType report_type; 
    /* Number of days elapsed between symptom onset and the TEK being used.
 E.g. 2 means TEK is 2 days after onset of symptoms. */
    bool has_days_since_onset_of_symptoms;
    int32_t days_since_onset_of_symptoms; 
} TemporaryExposureKey;

/* Protobuf definition for exports of confirmed temporary exposure keys.

 The full file format is documented under "Exposure Key Export File Format
 and Verification" at https://www.google.com/covid19/exposurenotifications/

 These files have a 16-byte, space-padded header before the protobuf data
 starts. They will be contained in a zip archive, alongside a signature
 file verifying the contents. */
typedef struct _TemporaryExposureKeyExport { 
    /* Time window of keys in this file based on arrival to server, in UTC
 seconds. start_timestamp, end_timestamp, and batch_num must be unique
 at any given snapshot of the index for a server. If multiple
 files are used for a specific time period, and batch_num/batch_size
 are both 1 (See below), then offsetting the end_timestamp is the
 suggested method for forcing uniqueness. */
    bool has_start_timestamp;
    uint64_t start_timestamp; 
    bool has_end_timestamp;
    uint64_t end_timestamp; 
    /* Region for which these keys came from (e.g., country) */
    pb_callback_t region; 
    /* E.g., Batch 2 of 10. Ordinal, 1-based numbering.
 Note: Not yet supported on iOS. Use values of 1 for both. */
    bool has_batch_num;
    int32_t batch_num; 
    bool has_batch_size;
    int32_t batch_size; 
    /* Information about signatures
 If there are multiple entries, they must be ordered in descending
 time order by signing key effective time (most recent one first).
 There is a limit of 10 signature infos per export file (mobile OS may
 not check anything after that). */
    pb_callback_t signature_infos; 
    /* The TemporaryExposureKeys for initial release of keys.
 Keys should be included in this list for initial release,
 whereas revised or revoked keys should go in revised_keys. */
    pb_callback_t keys; 
    /* TemporaryExposureKeys that have changed status.
 Keys should be included in this list if they have changed status
 or have been revoked. */
    pb_callback_t revised_keys; 
} TemporaryExposureKeyExport;


/* Helper constants for enums */
#define _TemporaryExposureKey_ReportType_MIN TemporaryExposureKey_ReportType_UNKNOWN
#define _TemporaryExposureKey_ReportType_MAX TemporaryExposureKey_ReportType_REVOKED
#define _TemporaryExposureKey_ReportType_ARRAYSIZE ((TemporaryExposureKey_ReportType)(TemporaryExposureKey_ReportType_REVOKED+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define TemporaryExposureKeyExport_init_default  {false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define SignatureInfo_init_default               {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define TemporaryExposureKey_init_default        {{{NULL}, NULL}, false, 0, false, 0, false, 144, false, _TemporaryExposureKey_ReportType_MIN, false, 0}
#define TEKSignatureList_init_default            {{{NULL}, NULL}}
#define TEKSignature_init_default                {false, SignatureInfo_init_default, false, 0, false, 0, {{NULL}, NULL}}
#define TemporaryExposureKeyExport_init_zero     {false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define SignatureInfo_init_zero                  {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define TemporaryExposureKey_init_zero           {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, _TemporaryExposureKey_ReportType_MIN, false, 0}
#define TEKSignatureList_init_zero               {{{NULL}, NULL}}
#define TEKSignature_init_zero                   {false, SignatureInfo_init_zero, false, 0, false, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define SignatureInfo_verification_key_version_tag 3
#define SignatureInfo_verification_key_id_tag    4
#define SignatureInfo_signature_algorithm_tag    5
#define TEKSignatureList_signatures_tag          1
#define TEKSignature_signature_info_tag          1
#define TEKSignature_batch_num_tag               2
#define TEKSignature_batch_size_tag              3
#define TEKSignature_signature_tag               4
#define TemporaryExposureKey_key_data_tag        1
#define TemporaryExposureKey_transmission_risk_level_tag 2
#define TemporaryExposureKey_rolling_start_interval_number_tag 3
#define TemporaryExposureKey_rolling_period_tag  4
#define TemporaryExposureKey_report_type_tag     5
#define TemporaryExposureKey_days_since_onset_of_symptoms_tag 6
#define TemporaryExposureKeyExport_start_timestamp_tag 1
#define TemporaryExposureKeyExport_end_timestamp_tag 2
#define TemporaryExposureKeyExport_region_tag    3
#define TemporaryExposureKeyExport_batch_num_tag 4
#define TemporaryExposureKeyExport_batch_size_tag 5
#define TemporaryExposureKeyExport_signature_infos_tag 6
#define TemporaryExposureKeyExport_keys_tag      7
#define TemporaryExposureKeyExport_revised_keys_tag 8

/* Struct field encoding specification for nanopb */
#define TemporaryExposureKeyExport_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FIXED64,  start_timestamp,   1) \
X(a, STATIC,   OPTIONAL, FIXED64,  end_timestamp,     2) \
X(a, CALLBACK, OPTIONAL, STRING,   region,            3) \
X(a, STATIC,   OPTIONAL, INT32,    batch_num,         4) \
X(a, STATIC,   OPTIONAL, INT32,    batch_size,        5) \
X(a, CALLBACK, REPEATED, MESSAGE,  signature_infos,   6) \
X(a, CALLBACK, REPEATED, MESSAGE,  keys,              7) \
X(a, CALLBACK, REPEATED, MESSAGE,  revised_keys,      8)
#define TemporaryExposureKeyExport_CALLBACK pb_default_field_callback
#define TemporaryExposureKeyExport_DEFAULT NULL
#define TemporaryExposureKeyExport_signature_infos_MSGTYPE SignatureInfo
#define TemporaryExposureKeyExport_keys_MSGTYPE TemporaryExposureKey
#define TemporaryExposureKeyExport_revised_keys_MSGTYPE TemporaryExposureKey

#define SignatureInfo_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   verification_key_version,   3) \
X(a, CALLBACK, OPTIONAL, STRING,   verification_key_id,   4) \
X(a, CALLBACK, OPTIONAL, STRING,   signature_algorithm,   5)
#define SignatureInfo_CALLBACK pb_default_field_callback
#define SignatureInfo_DEFAULT NULL

#define TemporaryExposureKey_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    key_data,          1) \
X(a, STATIC,   OPTIONAL, INT32,    transmission_risk_level,   2) \
X(a, STATIC,   OPTIONAL, INT32,    rolling_start_interval_number,   3) \
X(a, STATIC,   OPTIONAL, INT32,    rolling_period,    4) \
X(a, STATIC,   OPTIONAL, UENUM,    report_type,       5) \
X(a, STATIC,   OPTIONAL, SINT32,   days_since_onset_of_symptoms,   6)
#define TemporaryExposureKey_CALLBACK pb_default_field_callback
#define TemporaryExposureKey_DEFAULT (const pb_byte_t*)"\x20\x90\x01\x00"

#define TEKSignatureList_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  signatures,        1)
#define TEKSignatureList_CALLBACK pb_default_field_callback
#define TEKSignatureList_DEFAULT NULL
#define TEKSignatureList_signatures_MSGTYPE TEKSignature

#define TEKSignature_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  signature_info,    1) \
X(a, STATIC,   OPTIONAL, INT32,    batch_num,         2) \
X(a, STATIC,   OPTIONAL, INT32,    batch_size,        3) \
X(a, CALLBACK, OPTIONAL, BYTES,    signature,         4)
#define TEKSignature_CALLBACK pb_default_field_callback
#define TEKSignature_DEFAULT NULL
#define TEKSignature_signature_info_MSGTYPE SignatureInfo

extern const pb_msgdesc_t TemporaryExposureKeyExport_msg;
extern const pb_msgdesc_t SignatureInfo_msg;
extern const pb_msgdesc_t TemporaryExposureKey_msg;
extern const pb_msgdesc_t TEKSignatureList_msg;
extern const pb_msgdesc_t TEKSignature_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define TemporaryExposureKeyExport_fields &TemporaryExposureKeyExport_msg
#define SignatureInfo_fields &SignatureInfo_msg
#define TemporaryExposureKey_fields &TemporaryExposureKey_msg
#define TEKSignatureList_fields &TEKSignatureList_msg
#define TEKSignature_fields &TEKSignature_msg

/* Maximum encoded size of messages (where known) */
/* TemporaryExposureKeyExport_size depends on runtime parameters */
/* SignatureInfo_size depends on runtime parameters */
/* TemporaryExposureKey_size depends on runtime parameters */
/* TEKSignatureList_size depends on runtime parameters */
/* TEKSignature_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
